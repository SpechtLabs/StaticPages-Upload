name: 'StaticPages Upload'
description: 'Upload a static website to your self-hosted Static Pages instance using GitHub OIDC authentication.'

inputs:
  endpoint:
    description: 'Base URL of your Static Pages API (e.g., staticpages.example.com or https://staticpages.example.com)'
    required: true

  site-dir:
    description: 'Path to the directory containing the generated static site to upload'
    required: true

  verbose:
    description: 'Enable verbose upload output (true/false)'
    required: false
    default: 'false'

outputs:
  uploaded-count:
    description: 'The number of files uploaded'
    value: ${{ steps.upload.outputs.uploaded-count }}

runs:
  using: 'composite'
  steps:
    - name: Normalize URL and fetch ID token
      id: prepare
      uses: actions/github-script@v7
      with:
        debug: false
        script: |
          let url = '${{ inputs.endpoint }}';

          // Ensure it has a protocol
          if (!url.match(/^https?:\/\//)) {
            url = 'https://' + url;
          }

          // Remove trailing slashes
          url = url.replace(/\/+$/, '');

          // Append /upload if not already present
          if (!url.endsWith('/upload')) {
            url += '/upload';
          }

          const idToken = await core.getIDToken();

          core.setOutput('uploadApiEndpoint', url);
          core.setOutput('idtoken', idToken);

    - name: Upload static site artifacts
      id: upload
      shell: bash
      run: |
        set -euo pipefail

        URL="${{ steps.prepare.outputs.uploadApiEndpoint }}"
        IDTOKEN="${{ steps.prepare.outputs.idtoken }}"
        VERBOSE="${{ inputs.verbose }}"

        [[ "$VERBOSE" == "true" ]] && CURL_OPTS="-v" || CURL_OPTS="--silent"

        CURL_ARGS=()
        FILE_COUNT=0
        while IFS= read -r -d '' file; do
          relpath="${file#${{ inputs.site-dir }}}"
          CURL_ARGS+=("-F" "files[${relpath}]=@${file}")
          ((FILE_COUNT++))
        done < <(find "${{ inputs.site-dir }}" -type f -print0)

        echo "Uploading $FILE_COUNT files to $URL..."

        # Force verbosity for now
        curl $CURL_OPTS -o /tmp/response.out \
          -X POST "$URL" \
          -H "Authorization: Bearer $IDTOKEN" \
          "${CURL_ARGS[@]}"

        echo "### Static site uploaded successfully" >> "$GITHUB_STEP_SUMMARY"
        echo "- Files uploaded: $FILE_COUNT" >> "$GITHUB_STEP_SUMMARY"
        echo "- Target endpoint: $URL" >> "$GITHUB_STEP_SUMMARY"
