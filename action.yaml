name: 'StaticPages Upload'
description: 'upload a html generated by your static page generator of choice to your self-hosted Static Pages instance'
inputs:
  apiUrl:
    description: 'The API Endpoint of your Static Pages instance'
    required: true

  dir:
    description: 'The directory containing the static files to upload'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Fetch GitHub OIDC Token
      uses: actions/github-script@v7
      id: script
      with:
        debug: false
        script: |
          core.setOutput('TOKEN', process.env['ACTIONS_RUNTIME_TOKEN'].trim())
          core.setOutput('IDTOKENURL', process.env['ACTIONS_ID_TOKEN_REQUEST_URL'].trim())

    - name: Upload static site artifacts
      shell: bash
      run: |
        set -euo pipefail

        # Fetch GitHub OIDC Token
        IDTOKEN=$(curl -H "Authorization: Bearer ${{steps.script.outputs.TOKEN}}" \
          "${{steps.script.outputs.IDTOKENURL}}" \
          -H "Accept: application/json; api-version=2.0" \
          -H "Content-Type: application/json" \
          -d '{}' | jq -r '.value')

        # Build curl arguments for multipart/form-data, preserving relative paths
        CURL_ARGS=()
        while IFS= read -r -d '' file; do
          relpath="${file#${{ inputs.dir }}}"
          CURL_ARGS+=("-F" "files[${relpath}]=@${file}")
        done < <(find ${{ inputs.dir }} -type f -print0)

        echo "Uploading ${#CURL_ARGS[@]} files..."

        # Upload to your REST API
        curl -v -X POST ${{ inputs.apiUrl }} \
          -H "Authorization: Bearer $IDTOKEN" \
          "${CURL_ARGS[@]}"